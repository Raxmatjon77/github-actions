name: Deploy to GCP VM

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.GCP_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Debug SSH Key
        run: |
          ls -la ~/.ssh/
          cat ~/.ssh/id_rsa | wc -l
          echo "First line of key:"
          head -n 1 ~/.ssh/id_rsa

      - name: Test SSH Connection
        run: |
          ssh -v -i ~/.ssh/id_rsa ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }} "echo 'SSH connection successful'"

      - name: Copy files to GCP VM
        if: success()
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }} "mkdir -p /home/${{ secrets.GCP_USERNAME }}/app"
          scp -i ~/.ssh/id_rsa -r . ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }}:/home/${{ secrets.GCP_USERNAME }}/app

      - name: Deploy on GCP VM
        if: success()
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }} << 'ENDSSH'
            cd /home/${{ secrets.GCP_USERNAME }}/app
            echo "NODE_ENV=${{ secrets.NODE_ENV }}" > .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "JWT_AT_SECRET=${{ secrets.JWT_AT_SECRET }}" >> .env
            echo "JWT_RT_SECRET=${{ secrets.JWT_RT_SECRET }}" >> .env
            echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
            echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
            echo "DATABASE_DATABASE=${{ secrets.DATABASE_DATABASE }}" >> .env
            docker-compose down || true
            docker-compose up --build -d
            docker image prune -f
          ENDSSH
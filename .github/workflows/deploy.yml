name: Deploy to GCP VM

on:
  push:
    branches:
      - master  # Change this to your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.GCP_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to GCP VM
        run: |
          scp -r . ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }}:/home/${{ secrets.GCP_USERNAME }}/app

      - name: Deploy on GCP VM
        run: |
          ssh ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }} << 'EOF'
            cd /home/${{ secrets.GCP_USERNAME }}/app

            # Set up environment variables
            echo "NODE_ENV=production" > .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "JWT_AT_SECRET=${{ secrets.JWT_AT_SECRET }}" >> .env
            echo "JWT_RT_SECRET=${{ secrets.JWT_RT_SECRET }}" >> .env
            echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
            echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
            echo "DATABASE_DATABASE=${{ secrets.DATABASE_DATABASE }}" >> .env

            # Stop and remove old containers
            docker compose down

            # Build and run new containers
            docker compose up --build -d

            # Remove old images
            docker system prune -af
          EOF
